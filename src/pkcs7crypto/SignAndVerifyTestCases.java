package pkcs7crypto;

public class SignAndVerifyTestCases {

    public static void main(String[] args) {
        System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        System.out.println("Digital Signature Verification Test Suite");
        System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");

        /* Test 1: Proper signed data  */
        testProperSignedData();
        System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n");

        /* Test 2: Tampered payload data  */
        testTamperedPayload();
        System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n");

        /* Test 3: Tampered signature  */
        testTamperedSignature();

        System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        System.out.println("Test Suite Completed");
        System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
    }

    /**
     * Test Case 1: Verify properly signed data
     * Expected: Signature verification should PASS
     */
    public static void testProperSignedData() {
        System.out.println("TEST 1: PROPER SIGNED DATA");
        System.out.println("---------------------------");
        System.out.println("Description: Verifying original signed JSON with no modifications");
        System.out.println("Expected Result: ✅ PASS - Signature should verify successfully\n");

        try {
            String signedJson = "{\"signatureInfo\":{\"signatureFormat\":\"PKCS7\",\"signature\":\"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\\u003d\\u003d\",\"x5c\":[\"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\\u003d\"],\"algorithm\":\"SHA256withRSA\"},\"payload\":{\"a\":\"b\"}}";

            boolean result = Pkcs7Crypto.verifySignedJson(signedJson);

            System.out.println("\n>>> ACTUAL RESULT: " + (result ? "✅ PASS" : "❌ FAIL"));
            System.out.println(">>> STATUS: Signature verification " + (result ? "SUCCESSFUL" : "FAILED"));

        } catch (Exception e) {
            System.out.println("\n>>> ACTUAL RESULT: ❌ FAIL");
            System.out.println(">>> ERROR: " + e.getMessage());
            System.out.println(">>> STATUS: Exception occurred during verification");
        }
    }

    /**
     * Test Case 2: Verify signed data with tampered payload
     * Expected: Signature verification should FAIL
     */
    public static void testTamperedPayload() {
        System.out.println("TEST 2: TAMPERED PAYLOAD DATA");
        System.out.println("------------------------------");
        System.out.println("Description: Original payload was {\"a\":\"b\"}, but tampered to {\"a\":\"TAMPERED\"}");
        System.out.println("Expected Result: ❌ FAIL - Payload tampering should be detected\n");

        try {
            // Modified payload from {"a":"b"} to {"a":"TAMPERED"}
            String tamperedJson = "{\"signatureInfo\":{\"signatureFormat\":\"PKCS7\",\"signature\":\"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\\u003d\\u003d\",\"x5c\":[\"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\\u003d\"],\"algorithm\":\"SHA256withRSA\"},\"payload\":{\"a\":\"TAMPERED\"}}";

            boolean result = Pkcs7Crypto.verifySignedJson(tamperedJson);

            System.out.println("\n>>> ACTUAL RESULT: " + (result ? "✅ PASS" : "❌ FAIL"));
            System.out.println(">>> STATUS: " + (result ? "WARNING - Tampered data was NOT detected!" : "CORRECT - Payload tampering was detected"));

        } catch (Exception e) {
            System.out.println("\n>>> ACTUAL RESULT: ❌ FAIL (Exception thrown)");
            System.out.println(">>> ERROR: " + e.getMessage());
            System.out.println(">>> STATUS: CORRECT - Payload tampering was detected and rejected");
        }
    }

    /**
     * Test Case 3: Verify signed data with tampered signature
     * Expected: Signature verification should FAIL
     */
    public static void testTamperedSignature() {
        System.out.println("TEST 3: TAMPERED SIGNATURE");
        System.out.println("---------------------------");
        System.out.println("Description: Signature bytes have been modified (last few characters changed)");
        System.out.println("Expected Result: ❌ FAIL - Invalid signature should be detected\n");

        try {
            // Modified the last characters of the signature to corrupt it
            String tamperedSignature = "{\"signatureInfo\":{\"signatureFormat\":\"PKCS7\",\"signature\":\"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\",\"x5c\":[\"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\\u003d\"],\"algorithm\":\"SHA256withRSA\"},\"payload\":{\"a\":\"b\"}}";

            boolean result = Pkcs7Crypto.verifySignedJson(tamperedSignature);

            System.out.println("\n>>> ACTUAL RESULT: " + (result ? "✅ PASS" : "❌ FAIL"));
            System.out.println(">>> STATUS: " + (result ? "WARNING - Tampered signature was NOT detected!" : "CORRECT - Invalid signature was detected"));

        } catch (Exception e) {
            System.out.println("\n>>> ACTUAL RESULT: ❌ FAIL (Exception thrown)");
            System.out.println(">>> ERROR: " + e.getMessage());
            System.out.println(">>> STATUS: CORRECT - Invalid signature was detected and rejected");
        }
    }
}
